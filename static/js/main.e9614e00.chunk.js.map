{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layouts/MainNavigation.module.css","components/StartingPage/StartingPageContent.module.css","components/Profile/UserProfile.module.css","store/auth-context.js","components/Layouts/MainNavigation.js","components/Layouts/Layout.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","pages/ProfilePage.js","App.js","reportWebVitals.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextvalue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","AuthForm","history","useHistory","emailInputRef","useRef","passwordInputref","isLogin","setisLogin","isLoadng","setIsLoading","auth","onSubmit","event","preventDefault","url","enteredEmail","current","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","Error","expiresIn","idToken","toISOString","replace","catch","err","alert","message","control","htmlFor","type","id","required","ref","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","ProfileForm","newPasswordInputRef","form","enteredNewPassword","action","UserProfile","profile","ProfilePage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9614e00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__r_JVQ\",\"control\":\"ProfileForm_control__39Z_g\",\"action\":\"ProfileForm_action__2nVHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3uNaC\",\"logo\":\"MainNavigation_logo__2wmR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__G2LbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2cAPR\"};","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext( {\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: ( token ) => { },\r\n    logout: () => {}\r\n} );\r\n\r\nconst calculateRemainingTime = ( expirationTime ) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date( expirationTime ).getTime();\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n}\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem( 'token' );\r\n    const storedExpirationDate = localStorage.getItem( 'expirationTime' );\r\n\r\n    const remainingTime = calculateRemainingTime( storedExpirationDate );\r\n\r\n    if ( remainingTime <= 3600 ) {\r\n        localStorage.removeItem( 'token' );\r\n        localStorage.removeItem( 'expirationTime' );\r\n        return null\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    }\r\n}\r\n\r\nexport const AuthContextProvider = ( props ) => {\r\n    const tokenData = retrieveStoredToken();\r\n\r\n    let initialToken;\r\n\r\n    if ( tokenData ) {\r\n        initialToken = tokenData.token\r\n    }\r\n\r\n    const [ token, setToken ] = useState( initialToken );\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken( null )\r\n        localStorage.removeItem( 'token' );\r\n        localStorage.removeItem( 'expirationTime' );\r\n\r\n        if ( logoutTimer ) {\r\n            clearTimeout( logoutTimer );\r\n        }\r\n    }, [])\r\n\r\n    \r\n    const loginHandler = ( token, expirationTime ) => {\r\n        setToken( token );\r\n        localStorage.setItem( 'token', token );\r\n        localStorage.setItem( 'expirationTime', expirationTime );\r\n\r\n        const remainingTime = calculateRemainingTime( expirationTime );\r\n\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if ( tokenData ) {\r\n            logoutTimer = setTimeout( logoutHandler, tokenData.duration );\r\n        }\r\n    }, [tokenData, logoutHandler])\r\n\r\n    const contextvalue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={contextvalue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n};\r\n\r\nexport default AuthContext;","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n\r\n  const authCtx = useContext( AuthContext );\r\n\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n  const logoutHandler = () => {\r\n    authCtx.logout();\r\n  }\r\n  return (\r\n    <header className={classes.header}>\r\n      <Link to='/'>\r\n        <div className={classes.logo}>React Auth</div>\r\n      </Link>\r\n      <nav>\r\n        <ul>\r\n         {!isLoggedIn && <li>\r\n            <Link to='/auth'>Login</Link>\r\n          </li>}\r\n          {isLoggedIn && <li>\r\n            <Link to='/profile'>Profile</Link>\r\n          </li>}\r\n         {isLoggedIn && <li>\r\n            <button onClick={logoutHandler}>Logout</button>\r\n          </li>}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from 'react';\r\n\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;","import { useContext, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AuthForm.module.css\";\r\n\r\n\r\nconst AuthForm = () => {\r\n\r\n    const history =  useHistory();\r\n    const emailInputRef = useRef();\r\n    const passwordInputref = useRef();\r\n\r\n    const authCtx = useContext( AuthContext );\r\n\r\n    const [ isLogin, setisLogin ] = useState( true );\r\n    const [ isLoadng, setIsLoading ] = useState( false );\r\n\r\n    const switchAuthModeHandler = () => {\r\n        setisLogin( (prevState) => !prevState)\r\n    }\r\n\r\n    const submitHandler = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        const enteredEmail = emailInputRef.current.value;\r\n        const enteredPassword = passwordInputref.current.value;\r\n        setIsLoading( true );\r\n        let url;\r\n        if ( isLogin ) {\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBsPO0HeWQrT8E1wqysvqF6T0vlqHi5NyU\";\r\n        } else {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBsPO0HeWQrT8E1wqysvqF6T0vlqHi5NyU';\r\n        }\r\n        fetch( url, {\r\n            method: 'POST',\r\n            body: JSON.stringify( {\r\n                email: enteredEmail,\r\n                password: enteredPassword,\r\n                returnSecureToken: true\r\n            } ),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        } ).then( ( res ) => {\r\n            setIsLoading( false );\r\n            if ( res.ok ) {\r\n                return res.json();\r\n            } else {\r\n                return res.json().then( ( data ) => {\r\n                    let errorMessage = \"Authentication Failed\";\r\n                    console.log( data );\r\n                    throw new Error(errorMessage)\r\n                } );\r\n            }\r\n        } )\r\n            .then( ( data ) => {\r\n                const expirationTime = new Date(\r\n                    new Date().getTime() + +data.expiresIn * 1000\r\n                )\r\n                authCtx.login( data.idToken, expirationTime.toISOString() );\r\n                history.replace( \"/\" );\r\n                console.log( data );\r\n            } )\r\n            .catch( ( err ) => {\r\n                alert( err.message );\r\n            } );\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>{isLogin ? \"Login\": \"Sign Up\" }</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <div className={classes.control}>\r\n                    <label htmlFor=\"email\">Your Email</label>\r\n                    <input type=\"email\" id=\"email\" required ref={ emailInputRef}/>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor=\"password\">Your Password</label>\r\n                    <input type=\"password\" id=\"password\" required ref={ passwordInputref}/>\r\n                </div>\r\n            \r\n                <div className={classes.actions}>\r\n                    {!isLoadng && <button>{isLogin ? \"Login\" : \"Create Account\"}</button>}\r\n                    {isLoadng && <p>Sending Request...</p>}\r\n                    <button className={classes.toggle} onClick={switchAuthModeHandler}>\r\n                        {isLogin ? 'Create a New Account' : 'Logn With Existing Account'}\r\n                    </button>\r\n                </div>\r\n        </form>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from '../components/Auth/AuthForm';\r\n\r\nconst AuthPage = () => {\r\n    return <AuthForm />\r\n}\r\n\r\nexport default AuthPage;\r\n","import classes from \"./StartingPageContent.module.css\";\r\n\r\nconst StartingPageContent = () => {\r\n    return (\r\n        <section className={classes.starting}>\r\n            <h1>Welcome To Board...</h1>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default StartingPageContent;","import StartingPageContent from \"../components/StartingPage/StartingPageContent\";\r\n\r\nconst HomePage = () => {\r\n    return <StartingPageContent />\r\n};\r\n\r\nexport default HomePage;","import { useContext, useRef } from \"react\";\r\nimport classes from \"./ProfileForm.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst ProfileForm = () => {\r\n\r\n    const history =  useHistory();\r\n    const newPasswordInputRef = useRef();\r\n\r\n    const authCtx = useContext( AuthContext )\r\n    console.log( authCtx );\r\n\r\n    const submitHandler = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        const enteredNewPassword = newPasswordInputRef.current.value;\r\n\r\n        fetch( \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBsPO0HeWQrT8E1wqysvqF6T0vlqHi5NyU\", {\r\n            method: 'POST',\r\n            body: JSON.stringify( {\r\n                idToken: authCtx.token,\r\n                password: enteredNewPassword,\r\n                returnSecureToken: false\r\n            } ),\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        } ).then( res => {\r\n            history.replace( \"/\" );\r\n            console.log(res.data)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n            <div className={classes.control}>\r\n                <label htmlFor=\"new-password\">New Password</label>\r\n                <input type=\"password\" id=\"new-passsword\" ref={newPasswordInputRef} required />\r\n            </div>\r\n            <div className={classes.action}>\r\n                <button>Change Password</button>\r\n            </div>\r\n            </form>\r\n    );\r\n};\r\n\r\nexport default ProfileForm;","import ProfileForm from \"./ProfileForm\";\r\nimport classes from \"./UserProfile.module.css\";\r\n\r\nconst UserProfile = () => {\r\n    return (\r\n        <section className={classes.profile}>\r\n            <h1>Your User Profile</h1>\r\n            <ProfileForm />\r\n        </section>\r\n    )\r\n};\r\n\r\n\r\nexport default UserProfile;","import UserProfile from \"../components/Profile/UserProfile\";\r\n\r\nconst ProfilePage = () => {\r\n    return <UserProfile />\r\n};\r\n\r\nexport default ProfilePage;","import { useContext } from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Layout from './components/Layouts/Layout';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport ProfilePage from './pages/ProfilePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n\n  const authCtx = useContext( AuthContext );\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {\n          !authCtx.isLoggedIn &&\n          <Route path=\"/auth\">\n              <AuthPage />\n          </Route>\n        }\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <ProfilePage />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    \n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <BrowserRouter>\n         <App />\n      </BrowserRouter>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1Q8Mi\",\"control\":\"AuthForm_control__3aQ3J\",\"actions\":\"AuthForm_actions__2_jwG\",\"toggle\":\"AuthForm_toggle__3C20P\"};"],"sourceRoot":""}